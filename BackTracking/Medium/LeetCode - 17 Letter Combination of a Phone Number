class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if not digits:
            return []

        hashmap = { '2': 'abc', '3': 'def', '4':'ghi', 
                    '5' : 'jkl', '6':'mno', '7':'pqrs', '8':'tuv', '9':'wxyz'}

        res = []
        temp = []

        def backtracking(i):
            if len(temp) == len(digits):
                res.append(''.join(temp[:]))
                return
            
            for j in range(i, len(digits)):
                for s in hashmap[digits[j]]:
                    temp.append(s)
                    backtracking(j + 1)
                    temp.pop()
          
        backtracking(0)
        return res
