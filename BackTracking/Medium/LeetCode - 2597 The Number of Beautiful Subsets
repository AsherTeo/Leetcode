class Solution:
    def beautifulSubsets(self, nums: List[int], k: int) -> int:
        temp = []
        count  = 0
        
        def isValid(temp):
            for i in range(len(temp)):
                for j in range(i + 1, len(temp)):
                    if abs(temp[j] - temp[i]) == k:
                        return False
            return True

        def backtracking(i):
            nonlocal count

            if isValid(temp):
                count += 1

            for j in range(i, len(nums)):
                temp.append(nums[j])
                backtracking(j + 1)
                temp.pop()
        backtracking(0)
        return count - 1
