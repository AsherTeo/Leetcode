############################################################# Attempt 2 ##################################################

class Solution:
    def countGoodSubstrings(self, s: str) -> int:
        char_count = defaultdict(int)
        l = 0
        count = 0
        k = 3
       
        for r in range(len(s)):
            char_count[s[r]] += 1
            if r - l + 1 > k:
                char_count[s[l]] -= 1
                if char_count[s[l]] == 0:
                    del char_count[s[l]]
                l += 1
            
            if r - l + 1 == k and len(char_count) == k:
                count += 1
        
        return count

################################################ Attempt 1 #######################################

class Solution(object):
    def countGoodSubstrings(self, s):
        count = 0
        for i in range(len(s) - 3 + 1):
            subarr = s[i: i + 3]
            if len(set(subarr)) == 3:
                count += 1
        return count  
