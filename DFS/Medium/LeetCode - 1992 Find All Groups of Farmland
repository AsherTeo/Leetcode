class Solution:
    def findFarmland(self, land: List[List[int]]) -> List[List[int]]:
        self.visited = set()
        self.ans = []

        def dfs(i, j):
            if i < 0 or i >= len(land) or j < 0 or j >= len(land[0]) or land[i][j] == 0:
                return
            if (i, j) in self.visited:
                return
            self.visited.add((i,j))
            self.res.append((i,j))

            dfs(i + 1, j)
            dfs(i - 1, j)
            dfs(i, j + 1)
            dfs(i, j - 1)
        
        for i in range(len(land)):
            for j in range(len(land[0])):
                self.res = []
                if (i, j) not in self.visited and land[i][j] == 1:
                    dfs(i,j)
                    self.res = sorted(self.res)
                    first = self.res[0] 
                    last =  self.res[-1]
                    self.ans.append([num for nums in [first] + [last] for num in nums ])
        return self.ans
