class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        stack = [(root, None)]
        hash_map = Counter()
        seen = set()

        while stack:
            node, parent = stack.pop()
            hash_map[node] = parent

            if node.right:
                stack.append((node.right, node))
            if node.left:
                stack.append((node.left, node))

        while p:
            seen.add(p)
            p = hash_map[p]
        
        while q not in seen:
            q = hash_map[q]

        return q
