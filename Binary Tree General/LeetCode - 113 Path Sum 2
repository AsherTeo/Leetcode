################################################### DFS Method 1 #####################################################
class Solution(object):
    def pathSum(self, root, targetSum):
        if not root:
            return []
        stack = [(root, root.val, [root.val])]
        res = []
        while stack:
            node, curr_sum, path = stack.pop()
            if node.left is None and node.right is None and curr_sum == targetSum:
                res.append(path)
            
            if node.right:
                stack.append((node.right, curr_sum + node.right.val, path + [node.right.val]))
            if node.left:
                stack.append((node.left, curr_sum + node.left.val, path + [node.left.val]))
                
        return res
