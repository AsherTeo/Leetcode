class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        self.visit = set()
        rows, cols = len(grid), len(grid[0])
        directions = [[0,1], [1,0], [0, -1], [-1,0]]
        q = deque()
        fresh = 0

        for i in range(rows):
            for j in range(cols):
                if grid[i][j] == 1:
                    fresh += 1
                if grid[i][j] == 2:
                    q.append((i, j))
                    self.visit.add((i,j))
       
        if fresh == 0:
            return 0

        time = 0

        while q:
            for _ in range(len(q)):
                r, c = q.popleft()
                for x, y in directions:
                    row, col = r + x, c + y
                    if 0 <= row < rows and 0 <= col < cols and grid[row][col] == 1 and (row, col) not in self.visit:
                        fresh -= 1
                        q.append((row,col))
                        self.visit.add((row, col))
            time += 1
        
        return time - 1 if fresh == 0 else -1
