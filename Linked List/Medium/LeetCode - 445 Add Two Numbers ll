class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        def reverse(l_all):
            cur = l_all
            prev = None
            while cur:
                temp = cur.next
                cur.next = prev
                prev = cur
                cur = temp
            return prev
        
        cur1 = l1 = reverse(l1)
        cur2 = l2 = reverse(l2)
        tail = dummy = ListNode(0)
        carry = 0

        while cur1 and cur2:
            total = cur1.val + cur2.val + carry
            carry = total // 10
            total = total % 10
            tail.next = ListNode(total)

            cur1 = cur1.next
            cur2 = cur2.next
            tail = tail.next
        
        while cur1:
            num = cur1.val + carry 
            carry = num //10
            num = num % 10
            tail.next = ListNode(num)

            cur1 = cur1.next
            tail = tail.next

        while cur2:
            num = cur2.val + carry 
            carry = num //10
            num = num % 10
            tail.next = ListNode(num)

            cur2 = cur2.next
            tail = tail.next
            
        if carry == 1:
            tail.next = ListNode(1)
        return reverse(dummy.next)
