################################################# Method 1 ##############################

class Solution(object):
    def rightSideView(self, root):
        if root is None:
            return []
        queue = deque()
        queue.append(root)
        res = []
        while queue:
            num_nodes = len(queue)
            for i in range(num_nodes):
                node = queue.popleft()
                if i == (num_nodes - 1):
                    res.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
        return res

################################################# Method 2 ##############################

class Solution(object):
    def rightSideView(self, root):
        if root is None:
            return []
        queue = deque()
        queue.append(root)
        res = []
        while queue:
            num_nodes = len(queue)
            for i in range(num_nodes):
                node = queue.popleft()
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            res.append(node.val)
        return res
